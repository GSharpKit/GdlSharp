// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdl {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class DockNotebook : Gdl.DockItem {

		public DockNotebook (IntPtr raw) : base(raw) {}

		[DllImport("libgdl-3.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdl_dock_notebook_new();

		public DockNotebook () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (DockNotebook)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = gdl_dock_notebook_new();
		}

		[GLib.Property ("page")]
		public int Page {
			get {
				GLib.Value val = GetProperty ("page");
				int ret = (int) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("page", val);
				val.Dispose ();
			}
		}

		[DllImport("libgdl-3.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdl_dock_notebook_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gdl_dock_notebook_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
